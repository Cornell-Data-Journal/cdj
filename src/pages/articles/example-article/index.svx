---
title: Some article!
---

<!-- I mostly based this off of https://dev.to/pjaerr/lets-create-a-data-visualization-using-svelte-4m6p -->

<script>
  import CountyInformation from './components/CountyInformation.svelte';
  import MapContainer from './components/MapContainer.svelte';
  import MapRegion from './components/MapRegion.svelte';
  import regions from './data/regions.js';
  import data from './data/data';
  import cornell from './images/cornell.jpg';

  let activeRegion;

  const colourPalette = ["#38003c", "#2a404e", "#274c52", "#265053",
                         "#255454", "#245956", "#226659", "#1f735d",
                         "#1c8060", "#198c64", "#169968", "#14a66b",
                         "#11b26f", "#0ebf73", "#0bcc76", "#08d97a",
                         "#06e67e", "#03f281", "#00ff85"];
  
  function getCountyData(countyName) {
    return data
      .filter(county => county[8] === countyName)
      .map(county => {
        return {
          color: colourPalette[county[12][4]],
          ...county
        }
      })
    [0];
  };
</script>

<style>
    pre {
        background-color: beige;
    }
</style>


## { title }

Here is an article that I wrote, and look, it has a *map*!

<h3>{activeRegion ?? "None"}</h3>
{#if activeRegion}
  <CountyInformation
    county={getCountyData(activeRegion)}
    onClose={() => {
      activeRegion = undefined;
    }} />
{/if}
<MapContainer>
{#each Object.entries(regions) as [name, svgPath]}
  <MapRegion
    on:click={() => {activeRegion = name}}
    {svgPath}
    fillColour={activeRegion === name ? '#333' : getCountyData(name).color}
  />
{/each}
</MapContainer>

Some inline code:
```js
function coolFunc() {
  console.log('yeah!')
}
```

Wow, thats some `code`!

Here's a picture:

<img src={cornell} alt="Cornell Clocktower">

Lets make a list:
- One
- Two
- Three!

